name: CI/CD

on:
  push:
    branches:
      - master
      - feature/**

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:

    # checkout
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: docker compose up
      run: docker compose up -d 

    # E2E tests
    - name: E2E
      run: | 
      sleep 10
        docker ps
        bash ./E2E.sh


    # git tag
    - name: tagger
      if: github.ref == 'refs/heads/master'
      id: tagger
      env:          
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        tag=$(bash ./tagger.sh)
        export TAG=$tag
        echo "::set-env name=TAG::$TAG"
    # login to dockerhub    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # publish  to dockerhub    
    - name: publish to Docker Hub
      if: github.ref == 'refs/heads/master'
      run: |
        docker ps
        docker tag volunteer-myapp:latest eyalbran/volunteer:$TAG
        docker push eyalbran/volunteer:$TAG
       
    # push  tags
    - name: Github login
      if: github.ref == 'refs/heads/master'
      uses: actions/checkout@v3
      with:
        repository: EyalBran/volunteer
        ref: master
        token: ${{ secrets.TOKEN }}
    - name: push TAG
      run: |
        # git remote set-url origin https://${{ secrets.TOKEN }}@github.com/EyalBran/volunteer.git
        git push origin $TAG
    #deploy to ECR
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.SECRET_KEY }}
    #     aws-region: us-west-2

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, tag, and push the image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     # Build a docker container and push it to ECR 
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     echo "Pushing image to ECR..."
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


        

